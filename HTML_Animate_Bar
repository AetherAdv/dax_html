HTML_Animate_Bar = 

VAR pct = Parameter1[Parameter Value]
VAR pctText = FORMAT(pct * 100, "0") & "%"

VAR numBars = 40
VAR barsToFill = ROUND(pct * numBars, 0)

-- Determine dynamic colour
VAR fillColor =
    SWITCH(
        TRUE(),
        pct < 0.2, "#E59EFB",         
        pct > 0.8, "#F8FAB7",         
        "#6bfad8"                     
    )

-- Generate the bars: grey background + animated overlay
VAR barHTML = 
CONCATENATEX (
    GENERATESERIES(1, numBars, 1),
    VAR i = [Value]
    VAR isFilled = i <= barsToFill
    VAR delay = FORMAT((i - 1) * 0.05, "0.00") & "s"
    VAR fillBar = IF(
        isFilled,
        "<div class='fill-bar' style='
            background: " & fillColor & ";
            height: 100%;
            opacity: 0;
            animation: fadeInBar 0.6s ease forwards;
            animation-delay: " & delay & ";
        '></div>",
        ""
    )
    RETURN "
        <div class='bar-wrapper'>
            <div class='bar-bg'></div>
            " & fillBar & "
        </div>"
)

-- Dimensions increased for full bar display (added larger SVG size)
VAR sizeWidth = 1280
VAR sizeHeight = 200

-- Added: Style definitions including animation keyframes for bars and fade-in for label
VAR svghtml = "
<foreignObject x='0' y='0' width='" & sizeWidth & "' height='" & sizeHeight & "'>
<div xmlns='http://www.w3.org/1999/xhtml'>
<style>
.container {
  font-family: Segoe UI, sans-serif;
  width: 90%;
  height: 150px;
  margin: auto;
  display: flex;
  align-items: flex-end;
  justify-content: flex-start;
  gap: 4px;
}
.bar-wrapper {
  position: relative;
  width: 20px;
  height: 100%;
}
.bar-bg {
  background: #333;
  height: 40%;
  width: 100%;
  border-radius: 4px;
  position: absolute;
  bottom: 0;
}
.fill-bar {
  position: absolute;
  bottom: 0;
  width: 100%;
  border-radius: 4px;
}
.percentage-label {
  font-size: 48px;
  font-weight: bold;
  color: " & fillColor & ";
  text-shadow: 0 0 6px rgba(0,0,0,0.3);
  margin-left: 30px;
  align-self: flex-end;
  animation: fadeInLabel 0.5s ease-in;
}
@keyframes fadeInBar {
  from { opacity: 0; transform: scaleY(0.4); }
  to { opacity: 1; transform: scaleY(1); }
}
@keyframes fadeInLabel {
  from { opacity: 0; transform: translateX(-10px); }
  to { opacity: 1; transform: translateX(0); }
}
</style>
<div class='container'>
  " & barHTML & "
  <div class='percentage-label'>" & pctText & "</div>
</div>
</div>
</foreignObject>
"


VAR svg = "<svg xmlns='http://www.w3.org/2000/svg' width='" & sizeWidth & "' height='" & sizeHeight & "'>" & svghtml & "</svg>"

RETURN "data:image/svg+xml;utf8," & svg